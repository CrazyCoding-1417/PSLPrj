{"ast":null,"code":"import _slicedToArray from \"/Users/hsichen1/projects/Lowes-Team-Github/PSLPrj/online-shop-master/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hsichen1/projects/Lowes-Team-Github/PSLPrj/online-shop-master/client/src/Components/Login/TwitterLoginPoc.js\";\nimport React, { useState } from 'react';\nimport TwitterLogin from 'react-twitter-auth';\n\nfunction TwitterLoginPoc() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      token = _useState6[0],\n      setToken = _useState6[1];\n\n  var onSuccess = function onSuccess(response) {\n    var token = response.header.get('x-auth-token');\n\n    if (token) {\n      response.json().then(function (user) {\n        setAuthenticated(true);\n        setUser(user);\n        setToken(token);\n      });\n    }\n  };\n\n  var onFailed = function onFailed(error) {\n    alert(error);\n  };\n\n  var logout = function logout() {\n    setAuthenticated(false);\n    setToken('');\n    setUser(null);\n  };\n\n  return !setAuthenticated ? React.createElement(\"div\", {\n    style: {\n      marginTop: 50,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"The user has been authenticated\")) : React.createElement(\"div\", {\n    style: {\n      marginTop: 30,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(TwitterLogin, {\n    loginUrl: \"https://localhost:4000/api/v1/auth/twitter\",\n    onFailure: onFailed,\n    onSuccess: onSuccess,\n    requestTokenUrl: \"http://localhost:4000/api/v1/auth/twitter/reverse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nexport default TwitterLoginPoc;","map":{"version":3,"sources":["/Users/hsichen1/projects/Lowes-Team-Github/PSLPrj/online-shop-master/client/src/Components/Login/TwitterLoginPoc.js"],"names":["React","useState","TwitterLogin","TwitterLoginPoc","isAuthenticated","setAuthenticated","user","setUser","token","setToken","onSuccess","response","header","get","json","then","onFailed","error","alert","logout","marginTop","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,SAASC,eAAT,GAA2B;AAAA,kBAEmBF,QAAQ,CAAC,KAAD,CAF3B;AAAA;AAAA,MAElBG,eAFkB;AAAA,MAEDC,gBAFC;;AAAA,mBAGDJ,QAAQ,CAAC,IAAD,CAHP;AAAA;AAAA,MAGlBK,IAHkB;AAAA,MAGZC,OAHY;;AAAA,mBAICN,QAAQ,CAAC,EAAD,CAJT;AAAA;AAAA,MAIlBO,KAJkB;AAAA,MAIXC,QAJW;;AAMzB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAc;AAC9B,QAAMH,KAAK,GAAGG,QAAQ,CAACC,MAAT,CAAgBC,GAAhB,CAAoB,cAApB,CAAd;;AACA,QAAGL,KAAH,EAAU;AACRG,MAAAA,QAAQ,CAACG,IAAT,GAAgBC,IAAhB,CAAqB,UAAAT,IAAI,EAAI;AAC3BD,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAJD;AAKD;AACF,GATD;;AAWA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1BC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACD,GAFD;;AAIA,MAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBd,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAI,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAJD;;AAMF,SACE,CAACF,gBAAD,GAEI;AACE,IAAA,KAAK,EAAE;AACPe,MAAAA,SAAS,EAAE,EADJ;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCANA,CAFJ,GAYI;AACE,IAAA,KAAK,EAAE;AACPD,MAAAA,SAAS,EAAE,EADJ;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAC,4CADX;AAEE,IAAA,SAAS,EAAEL,QAFb;AAEuB,IAAA,SAAS,EAAEN,SAFlC;AAGE,IAAA,eAAe,EAAC,mDAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CAbN;AA2BC;;AAED,eAAeP,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport TwitterLogin from 'react-twitter-auth';\n\nfunction TwitterLoginPoc() {\n\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState('');\n\n  const onSuccess = (response) => {\n    const token = response.header.get('x-auth-token');\n    if(token) {\n      response.json().then(user => {\n        setAuthenticated(true);\n        setUser(user);\n        setToken(token);\n      })\n    }\n  };\n\n  const onFailed = (error) => {\n    alert(error);\n  }\n\n  const logout = () => {\n    setAuthenticated(false);\n    setToken('');\n    setUser(null);\n  };\n\nreturn (\n  !setAuthenticated ?\n    (\n      <div\n        style={{\n        marginTop: 50,\n        textAlign: 'center'\n      }}\n      >\n      <h2>The user has been authenticated</h2>\n      </div>\n    ) :\n    (\n      <div\n        style={{\n        marginTop: 30,\n        textAlign: 'center'\n      }}\n      >\n      <TwitterLogin \n        loginUrl=\"https://localhost:4000/api/v1/auth/twitter\"\n        onFailure={onFailed} onSuccess={onSuccess}\n        requestTokenUrl=\"http://localhost:4000/api/v1/auth/twitter/reverse\"\n      />\n      </div>\n    )\n  )\n}\n\nexport default TwitterLoginPoc;"]},"metadata":{},"sourceType":"module"}